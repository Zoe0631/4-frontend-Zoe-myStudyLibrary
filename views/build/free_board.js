const BACKEND_URL="http://localhost:13414",FRONT_URL="http://localhost:37866",GET="GET",POST="POST",PATCH="PATCH",DELETE="DELETE",OK=200,CREATED=201,NO_CONTENT=204,BAD_REQUEST=400,UNAUTHORIZED=401,FORBIDDEN=403,NOT_FOUND=404,CONFLICT=409,INTERNAL_SERVER_ERROR=500,FAIL_FETCH="fail_fetch",REQUEST_SUCCESS="request_success",LOGIN_REQUIRED="login_required",LOGIN="login",ALREADY_LOGIN="already_login",LOGOUT="logout",SIGN_UP="sign_up",INVALID_BODY="invalid_body",PW_MISMATCHED="pw_mismatched",NEW_PW_CONFIRM_MISMATCHED="pw/pw_confirm_mismatched",ONLY_IMAGE="only_jpg,jpeg,gjf,png(upper_5MB)_format_can_be_uploaded",DUPLICATED_NICKNAME="duplicated_nickname",NOT_EXIST="not_exist",NO_COMMENT="no_comment",FAVORITE="favorite +1",CANCEL_FAVORITE="cancel_favorite",NOT_AUTHORIZATION="not_authorization",NO_REGISTERED_INFORMATION="no_registered_information",INFO="info",ERROR="error",SUCCESS="success",WARNING="warning",QUESTION="question",CHECK="check";async function getSignUpGuide(){try{const e={mode:"cors",credentials:"include"},t=await fetch(`${BACKEND_URL}/user/sign-up/guide`,e);if(t.status===OK){return await t.text()}return await t.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function signUpRequest(e,t,o,n,r,a,s){try{const i={mode:"cors",method:POST,credentials:"include",headers:{"Content-Type":"application/json;charset=utf-8","Access-Control-Allow-Headers":"Content-Type, Referrer-Policy","Referrer-Policy":"strict-origin-when-cross-origin"},body:JSON.stringify({id:e,pw:t,confirmPw:o,name:n,nickname:r,phoneNumber:a,gender:s})},c=await fetch(`${BACKEND_URL}/user/sign-up`,i);return await c.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function dropOutRequest(){try{const e={mode:"cors",method:DELETE,credentials:"include",headers:{"Access-Control-Allow-Headers":" Referrer-Policy","Referrer-Policy":"strict-origin-when-cross-origin"}},t=await fetch(`${BACKEND_URL}/user/drop-out`,e);if(204===t.status)return{state:REQUEST_SUCCESS};return await t.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function loginRequest(e,t){try{const o={mode:"cors",method:POST,credentials:"include",headers:{"Content-Type":"application/json;charset=utf-8","Access-Control-Allow-Headers":"Content-Type"},body:JSON.stringify({id:e,pw:t})},n=await fetch(`${BACKEND_URL}/user/login`,o);return await n.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function logoutRequest(){try{const e={mode:"cors",method:POST,credentials:"include"},t=await fetch(`${BACKEND_URL}/user/logout`,e);return await t.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function getUserLibrary(){try{const e={mode:"cors",credentials:"include"},t=await fetch(`${BACKEND_URL}/user/user-lib`,e);return await t.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function reqRegisterUserLibrary(e){try{const t={mode:"cors",method:PATCH,credentials:"include"},o=await fetch(`${BACKEND_URL}/user/user-lib?libraryIndex=${e}`,t);if(o.status===OK)return{state:REQUEST_SUCCESS};return await o.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function deleteUserLibrary(e){try{const t={mode:"cors",method:DELETE,credentials:"include"},o=await fetch(`${BACKEND_URL}/user/user-lib?libraryIndex=${e}`,t);return await o.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function editNicknameRequest(e){try{const t={mode:"cors",method:PATCH,credentials:"include",headers:{"Content-Type":"application/json;charset=utf-8","Access-Control-Allow-Headers":"Content-Type, Referrer-Policy","Referrer-Policy":"strict-origin-when-cross-origin"},body:JSON.stringify({nickname:e})},o=await fetch(`${BACKEND_URL}/user/profile/nickname`,t);if(o.status===OK)return{state:REQUEST_SUCCESS};return await o.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function editProfileImageRequest(e){try{const t={mode:"cors",method:PATCH,credentials:"include",body:e},o=await fetch(`${BACKEND_URL}/user/profile/profileImage`,t);if(o.status===OK)return{state:REQUEST_SUCCESS};return await o.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function editContactRequest(e){try{const t={mode:"cors",method:PATCH,credentials:"include",headers:{"Content-Type":"application/json;charset=utf-8","Access-Control-Allow-Headers":"Content-Type, Referrer-Policy","Referrer-Policy":"strict-origin-when-cross-origin"},body:JSON.stringify({phoneNumber:e})},o=await fetch(`${BACKEND_URL}/user/new-contact`,t);if(o.status===OK)return{state:REQUEST_SUCCESS};return await o.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function editPwRequest(e,t,o){try{const n={mode:"cors",method:PATCH,credentials:"include",headers:{"Content-Type":"application/json;charset=utf-8","Access-Control-Allow-Headers":"Content-Type, Referrer-Policy","Referrer-Policy":"strict-origin-when-cross-origin"},body:JSON.stringify({pw:e,newPw:t,confirmPw:o})},r=await fetch(`${BACKEND_URL}/user/new-pw`,n);if(r.status===OK)return{state:REQUEST_SUCCESS};return await r.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function getUserInfo(){try{const e={mode:"cors",credentials:"include"},t=await fetch(`${BACKEND_URL}/user/info`,e);return await t.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function getRecentBoard(){try{const e={mode:"cors",credentials:"include"},t=await fetch(`${BACKEND_URL}/board/get`,e),o=await t.json();return t.status===OK?o[0]:o}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function getEntireBoard(e){try{let t;const o={mode:"cors",credentials:"include"};t=void 0===e?await fetch(`${BACKEND_URL}/board/get/free-bulletin`,o):await fetch(`${BACKEND_URL}/board/get/free-bulletin?page=${e}`,o);return await t.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function getDetailBoard(e){try{const t={mode:"cors",credentials:"include"},o=await fetch(`${BACKEND_URL}/board/get/free-bulletin/${e}`,t),n=await o.json();return o.status===OK&&(n.state=REQUEST_SUCCESS),n}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function writePostRequest(e,t,o){try{const n=[],r=o.split("#");r.shift();for(let e of r){const t={content:e};n.push(t)}const a={mode:"cors",method:POST,credentials:"include",headers:{"Content-Type":"application/json;charset=utf-8","Access-Control-Allow-Headers":"Content-Type, Referrer-Policy","Referrer-Policy":"strict-origin-when-cross-origin"},body:JSON.stringify({category:"자유게시판",postTitle:e,postContent:t,tags:n})},s=await fetch(`${BACKEND_URL}/board/write`,a);if(201===s.status)return{state:REQUEST_SUCCESS};return await s.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function getPostRequest(e){try{const t={mode:"cors",method:GET,credentials:"include"},o=await fetch(`${BACKEND_URL}/board/write?boardIndex=${e}`,t),n=await o.json();return o.status===OK&&(n.state=REQUEST_SUCCESS),n}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function editPostRequest(e,t,o,n){try{const r=[],a=n.split("#");a.shift();for(let e of a){const t={content:e};r.push(t)}const s={mode:"cors",method:PATCH,credentials:"include",headers:{"Content-Type":"application/json;charset=utf-8","Access-Control-Allow-Headers":"Content-Type, Referrer-Policy","Referrer-Policy":"strict-origin-when-cross-origin"},body:JSON.stringify({category:"자유게시판",postTitle:t,postContent:o,tags:r})},i=await fetch(`${BACKEND_URL}/board/edit?boardIndex=${e}`,s);if(i.status===OK)return{state:REQUEST_SUCCESS};return i.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function deletePostRequest(e){try{const t={mode:"cors",method:DELETE,credentials:"include"},o=await fetch(`${BACKEND_URL}/board/delete?boardIndex=${e}`,t);if(204===o.status)return{state:REQUEST_SUCCESS};return await o.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function favoritePostRequest(e){try{const t={mode:"cors",method:PATCH,credentials:"include"},o=await fetch(`${BACKEND_URL}/board/like?boardIndex=${e}`,t);return o.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function getSearchBoard(e,t,o){try{let n;const r={mode:"cors",method:GET,credentials:"include"};n=void 0===o?await fetch(`${BACKEND_URL}/board/search/free-bulletin?searchOption=${e}&searchContent=${t}`,r):await fetch(`${BACKEND_URL}/board/search/free-bulletin?searchOption=${e}&searchContent=${t}&page=${o}`,r);return n.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function userPostRequest(e){try{let t;const o={mode:"cors",method:GET,credentials:"include"};t=void 0===e?await fetch(`${BACKEND_URL}/board/user`,o):await fetch(`${BACKEND_URL}/board/user?page=${e}`,o);return t.json()}catch(e){return console.log(`FETCH ERROR: ${e}`),{state:FAIL_FETCH}}}async function sweetAlert(e,t,o,n){let r=!1;if(e===INFO){const e=await Swal.fire({title:t,text:o,icon:"info",confirmButtonColor:"#ffa07a"});return(e.isConfirmed||e.isDismissed)&&(r=!0),r}if(e===SUCCESS){const e=await Swal.fire({title:t,text:o,icon:"success",confirmButtonColor:"#ffa07a"});return(e.isConfirmed||e.isDismissed)&&(r=!0),r}if(e===WARNING){if(n){const e=await Swal.fire({title:t,text:o,icon:"warning",confirmButtonColor:"#ffa07a",footer:n});return(e.isConfirmed||e.isDismissed)&&(r=!0),r}{const e=await Swal.fire({title:t,text:o,icon:"warning",confirmButtonColor:"#ffa07a"});return(e.isConfirmed||e.isDismissed)&&(r=!0),r}}if(e===ERROR){if(n){const e=await Swal.fire({title:t,text:o,icon:"error",confirmButtonColor:"#ffa07a",footer:n});return(e.isConfirmed||e.isDismissed)&&(r=!0),r}{const e=await Swal.fire({title:t,text:o,icon:"error",confirmButtonColor:"#ffa07a"});return(e.isConfirmed||e.isDismissed)&&(r=!0),r}}if(e===QUESTION){const e=await Swal.fire({title:t,text:o,icon:"question",confirmButtonColor:"#ffa07a"});return(e.isConfirmed||e.isDismissed)&&(r=!0),r}if(e===CHECK){Swal.mixin({toast:!0,position:"top-end",showConfirmButton:!1,timer:3e3,timerProgressBar:!0,didOpen:e=>{e.addEventListener("mouseenter",Swal.stopTimer),e.addEventListener("mouseleave",Swal.resumeTimer)}}).fire({icon:o,title:t})}}let scrollSearchOption,scrollSearchContent,isEntire=!0,entirePage=2,scrollSearchPage=2;async function entireBoard(e){const t=await getEntireBoard(e);if(void 0===e&&1!==e||t.state!==NOT_EXIST)if(void 0!==t[0])for(let e in t)await addPost(t[e].postTitle,t[e].nickname,t[e].viewCount,t[e].favoriteCount,t[e].createDate,t[e].boardIndex);else{if(await sweetAlert(ERROR,"게시판 불러오기 실패","예상치 못한 오류입니다."`서버 메세지: ${t.state}`)){const e="/board";location.href=e}}else{const e=document.createElement("li");e.classList.add("freeBoard__board--list"),document.getElementsByClassName("freeBoard__board")[0].appendChild(e);const t=document.createElement("p");t.classList.add("freeBoard__board--title"),t.textContent="검색결과가 없습니다",document.getElementsByClassName("freeBoard__board--list")[0].appendChild(t)}}async function searchBoard(e,t,o){const n=await getSearchBoard(e,t,o);if(document.getElementsByClassName("freeBoard__board")[0].innerHTML="",void 0===o&&1!==o||n.state!==NOT_EXIST)if(void 0!==n[0]){isEntire=!1,scrollSearchPage=2,scrollSearchOption=e,scrollSearchContent=t;for(let e in n)await addPost(n[e].postTitle,n[e].nickname,n[e].viewCount,n[e].favoriteCount,n[e].createDate,n[e].boardIndex)}else{if(await sweetAlert(ERROR,"게시판 불러오기 실패","예상치 못한 오류입니다."`서버 메세지: ${n.state}`)){const e="/board";location.href=e}}else{const e=document.createElement("li");e.classList.add("freeBoard__board--list"),document.getElementsByClassName("freeBoard__board")[0].appendChild(e);const t=document.createElement("p");t.classList.add("freeBoard__board--title"),t.textContent="검색결과가 없습니다",document.getElementsByClassName("freeBoard__board--list")[0].appendChild(t)}}async function addPost(e,t,o,n,r,a){const s=document.createElement("li");s.classList.add("freeBoard__board--list"),document.getElementsByClassName("freeBoard__board")[0].appendChild(s);const i=document.getElementsByClassName("freeBoard__board--list").length-1,c=document.createElement("a");c.classList.add("freeBoard__board--href"),c.setAttribute("href",`/board/${a}`),document.getElementsByClassName("freeBoard__board--list")[i].appendChild(c);const d=document.createElement("p");d.classList.add("freeBoard__board--title"),d.textContent=`${e}`;const l=document.createElement("p");l.classList.add("freeBoard__board--nickname"),l.textContent=`${t}`;const u=document.createElement("p");u.classList.add("freeBoard__board--viewCount"),u.innerHTML=`\n              <img className="freeBoard__board--img" width="15px",height="15px" src="/views/img/view.png" alt="조회수 아이콘" /> ${o}`;const f=document.createElement("p");f.classList.add("freeBoard__board--favoriteCount"),f.innerHTML=`\n              <img className="freeBoard__board--img" width="15px",height="15px" src="/views/img/love.png" alt="조회수 아이콘" /> ${n}`;const E=document.createElement("p");E.classList.add("freeBoard__board--createDate"),E.textContent=`${r}`,document.getElementsByClassName("freeBoard__board--href")[i].append(d),document.getElementsByClassName("freeBoard__board--href")[i].append(l),document.getElementsByClassName("freeBoard__board--href")[i].append(u),document.getElementsByClassName("freeBoard__board--href")[i].append(f),document.getElementsByClassName("freeBoard__board--href")[i].append(E)}async function checkLogin(){if((await getUserInfo()).state===LOGIN_REQUIRED){if(await sweetAlert(WARNING,"로그인 필요","로그인이 필요한 기능입니다.")){const e="/user/login";location.href=e}}else{const e="/board/write";location.href=e}}async function lifeCycle(){await entireBoard(),window.onscroll=async function(){if(window.innerHeight+window.scrollY>=document.body.offsetHeight-2){let e;if(!0===isEntire){if(e=await getEntireBoard(entirePage++),void 0!==e[0])for(let t in e)await addPost(e[t].postTitle,e[t].nickname,e[t].viewCount,e[t].favoriteCount,e[t].createDate,e[t].boardIndex);else if(e.state!==NOT_EXIST){await sweetAlert(ERROR,"게시판 불러오기 실패","예상치 못한 오류입니다."`서버 메세지: ${e.state}`)}}else if(e=await getSearchBoard(scrollSearchOption,scrollSearchContent,scrollSearchPage++),void 0!==e[0])for(let t in e)await addPost(e[t].postTitle,e[t].nickname,e[t].viewCount,e[t].favoriteCount,e[t].createDate,e[t].boardIndex);else if(e.state!==NOT_EXIST){await sweetAlert(ERROR,"게시판 불러오기 실패","예상치 못한 오류입니다."`서버 메세지: ${e.state}`)}}}}lifeCycle();